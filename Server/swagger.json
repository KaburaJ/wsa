{
  "openapi": "3.0.0",
  "info": {
    "title": "WSA SERVER API DOCUMENTATION",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:4000"
    }
  ],
  "paths": {
    "/user/register": {
      "post": {
        "summary": "Register a new user",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "500": {
            "description": "Failed to register user"
          }
        }
      }
    },
    "/sodium-hypochlorite": {
      "post": {
        "summary": "Create a new sodium hypochlorite entry",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SodiumHypochloriteRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Sodium hypochlorite entry created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SodiumHypochloriteResponse"
                }
              }
            }
          },
          "500": {
            "description": "Failed to create sodium hypochlorite entry"
          }
        }
      }
    },
    "/hcl": {
      "post": {
        "summary": "Create a new HCL entry",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HCLRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "HCL entry created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HCLResponse"
                }
              }
            }
          },
          "500": {
            "description": "Failed to create HCL entry"
          }
        }
      }
    },
    "/sodium-hypochlorite/{name}": {
      "get": {
        "summary": "Get sodium hypochlorite entry by Account Name",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Sodium hypochlorite entry found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SodiumHypochloriteResponse"
                }
              }
            }
          },
          "404": {
            "description": "Sodium hypochlorite entry not found"
          },
          "500": {
            "description": "Failed to get sodium hypochlorite entry"
          }
        }
      }
    },
    "/hcl/{name}": {
      "get": {
        "summary": "Get HCL entry by Account nsmr",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "HCL entry found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HCLResponse"
                }
              }
            }
          },
          "404": {
            "description": "HCL entry not found"
          },
          "500": {
            "description": "Failed to get HCL entry"
          }
        }
      }
    },
    "/users": {
      "get": {
        "summary": "Get all users",
        "responses": {
          "200": {
            "description": "Users found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserResponse"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Failed to get users"
          }
        }
      }
    },
    "/user/{accountId}": {
      "get": {
        "summary": "Get user by account name",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "500": {
            "description": "Failed to get user by account name"
          }
        }
      },
      "delete": {
        "summary": "Delete a user by account ID",
        "parameters": [
          {
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the user to delete"
          }
        ],
        "responses": {
          "204": {
            "description": "User successfully deleted"
          },
          "400": {
            "description": "Bad request, invalid input parameter"
          },
          "500": {
            "description": "Internal server error, failed to delete user"
          }
        }
      }
    },
    "/users/{userId}/schedule": {
      "post": {
        "summary": "Create a new device schedule",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "description": "ID of the user from whom the schedule is being created",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "Schedule details",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "AccountName": {
                  "type": "string"
                },
                "wakeTime": {
                  "type": "string",
                  "format": "time",
                  "description": "Time when the device should wake up"
                },

                "sleepTime": {
                  "type": "string",
                  "format": "time",
                  "description": "Time when the device is asleep"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Device schedule created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDeviceSchedule"
                }
              }
            }
          },
          "400": {
            "description": "Failed to create a new device schedule"
          }
        }
      },
      "get": {
        "summary": "Get all schedules for a user",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Schedules found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserDeviceSchedule"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed to get schedules for the user"
          }
        }
      }
    },
    "/wifi-details": {
      "post": {
        "summary": "Create a new WIFI detail",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WifiDetailsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "WIFI detail created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WifiDetailsResponse"
                }
              }
            }
          },
          "500": {
            "description": "Failed to create WIFI detail"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "UserRequest": {
        "type": "object",
        "properties": {
          "AccountName": {
            "type": "string"
          },
          "AccountPassword": {
            "type": "string"
          },
          "CustomerName": {
            "type": "string"
          },
          "Phone1": {
            "type": "string"
          },
          "Phone2": {
            "type": "string"
          },
          "Email1": {
            "type": "string"
          },
          "Email2": {
            "type": "string"
          },
          "Email3": {
            "type": "string"
          },
          "Email4": {
            "type": "string"
          },
          "Notes": {
            "type": "string"
          }
        }
      },
      "UserResponse": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer"
          },
          "AccountName": {
            "type": "string"
          },
          "AccountPassword": {
            "type": "string"
          },
          "CustomerName": {
            "type": "string"
          },
          "Phone1": {
            "type": "string"
          },
          "Phone2": {
            "type": "string"
          },
          "Email1": {
            "type": "string"
          },
          "Email2": {
            "type": "string"
          },
          "Email3": {
            "type": "string"
          },
          "Email4": {
            "type": "string"
          },
          "Notes": {
            "type": "string"
          }
        }
      },
      "SodiumHypochloriteRequest": {
        "type": "object",
        "properties": {
          "SodiumHypochloriteActualValue": {
            "type": "number"
          },
          "SodiumHypochloriteTargetValue": {
            "type": "number"
          },
          "SodiumHypochloriteLitres": {
            "type": "number"
          },
          "SodiumHypochloriteCycles": {
            "type": "integer"
          },
          "SodiumHypochloriteStatusData": {
            "type": "number"
          },
          "SodiumHypochlorite_DIS_L": {
            "type": "number"
          },
          "SodiumHypochlorite_DPD_mL": {
            "type": "number"
          },
          "SoftwareVersion": {
            "type": "string"
          }
        }
      },
      "SodiumHypochloriteResponse": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer"
          },
          "userId": {
            "type": "integer"
          },
          "SodiumHypochloriteActualValue": {
            "type": "number"
          },
          "SodiumHypochloriteTargetValue": {
            "type": "number"
          },
          "SodiumHypochloriteLitres": {
            "type": "number"
          },
          "SodiumHypochloriteCycles": {
            "type": "integer"
          },
          "SodiumHypochloriteStatusData": {
            "type": "number"
          },
          "SodiumHypochlorite_DIS_L": {
            "type": "number"
          },
          "SodiumHypochlorite_DPD_mL": {
            "type": "number"
          },
          "SoftwareVersion": {
            "type": "string"
          }
        }
      },
      "HCLRequest": {
        "type": "object",
        "properties": {
          "HCLActualValue": {
            "type": "number"
          },
          "HCLTargetValue": {
            "type": "number"
          },
          "HCLLitres": {
            "type": "number"
          },
          "HCLCycles": {
            "type": "integer"
          },
          "HCLStatusData": {
            "type": "number"
          },
          "HCL_PH_L": {
            "type":            "number"
          },
          "HCL_PH_mL": {
            "type": "number"
          }
        }
      },
      "HCLResponse": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer"
          },
          "userId": {
            "type": "integer"
          },
          "HCLActualValue": {
            "type": "number"
          },
          "HCLTargetValue": {
            "type": "number"
          },
          "HCLLitres": {
            "type": "number"
          },
          "HCLCycles": {
            "type": "integer"
          },
          "HCLStatusData": {
            "type": "number"
          },
          "HCL_PH_L": {
            "type": "number"
          },
          "HCL_PH_mL": {
            "type": "number"
          }
        }
      },
      "WifiDetailsRequest": {
        "type": "object",
        "properties": {
          "SSID": {
            "type": "string"
          },
          "KEY": {
            "type": "string"
          }
        }
      },
      "WifiDetailsResponse": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer"
          },
          "connectedDeviceId": {
            "type": "integer"
          },
          "SSID": {
            "type": "string"
          },
          "KEY": {
            "type": "string"
          }
        }
      },
      "UserDeviceSchedule": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer"
          },
          "wakeTime": {
            "type": "string"
          },
          "sleepTime": {
            "type": "string"
          }
        }
      }
    }
  }
}

